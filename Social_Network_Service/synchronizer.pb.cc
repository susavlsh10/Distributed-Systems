// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: synchronizer.proto

#include "synchronizer.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace csce438 {
template <typename>
PROTOBUF_CONSTEXPR SyncRequest::SyncRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.users_)*/{}
  , /*decltype(_impl_.message_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.type_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.clusterid_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncRequestDefaultTypeInternal() {}
  union {
    SyncRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncRequestDefaultTypeInternal _SyncRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SyncReply::SyncReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.success_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncReplyDefaultTypeInternal() {}
  union {
    SyncReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncReplyDefaultTypeInternal _SyncReply_default_instance_;
}  // namespace csce438
static ::_pb::Metadata file_level_metadata_synchronizer_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_synchronizer_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_synchronizer_2eproto = nullptr;
const ::uint32_t TableStruct_synchronizer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csce438::SyncRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csce438::SyncRequest, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::csce438::SyncRequest, _impl_.users_),
    PROTOBUF_FIELD_OFFSET(::csce438::SyncRequest, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::csce438::SyncRequest, _impl_.clusterid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csce438::SyncReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csce438::SyncReply, _impl_.success_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::csce438::SyncRequest)},
        { 12, -1, -1, sizeof(::csce438::SyncReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::csce438::_SyncRequest_default_instance_._instance,
    &::csce438::_SyncReply_default_instance_._instance,
};
const char descriptor_table_protodef_synchronizer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\022synchronizer.proto\022\007csce438\032\037google/pr"
    "otobuf/timestamp.proto\"N\n\013SyncRequest\022\017\n"
    "\007message\030\001 \001(\t\022\r\n\005users\030\002 \003(\t\022\014\n\004type\030\003 "
    "\001(\t\022\021\n\tClusterID\030\004 \001(\005\"\034\n\tSyncReply\022\017\n\007s"
    "uccess\030\001 \001(\0102\306\001\n\014SynchService\0229\n\tSyncUse"
    "rs\022\024.csce438.SyncRequest\032\022.csce438.SyncR"
    "eply\"\0000\001\022=\n\rSyncFollowers\022\024.csce438.Sync"
    "Request\032\022.csce438.SyncReply\"\0000\001\022<\n\014SyncT"
    "imeline\022\024.csce438.SyncRequest\032\022.csce438."
    "SyncReply\"\0000\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_synchronizer_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_synchronizer_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_synchronizer_2eproto = {
    false,
    false,
    381,
    descriptor_table_protodef_synchronizer_2eproto,
    "synchronizer.proto",
    &descriptor_table_synchronizer_2eproto_once,
    descriptor_table_synchronizer_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_synchronizer_2eproto::offsets,
    file_level_metadata_synchronizer_2eproto,
    file_level_enum_descriptors_synchronizer_2eproto,
    file_level_service_descriptors_synchronizer_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_synchronizer_2eproto_getter() {
  return &descriptor_table_synchronizer_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_synchronizer_2eproto(&descriptor_table_synchronizer_2eproto);
namespace csce438 {
// ===================================================================

class SyncRequest::_Internal {
 public:
};

SyncRequest::SyncRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csce438.SyncRequest)
}
SyncRequest::SyncRequest(const SyncRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.users_){from._impl_.users_}
    , decltype(_impl_.message_) {}

    , decltype(_impl_.type_) {}

    , decltype(_impl_.clusterid_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), _this->GetArenaForAllocation());
  }
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), _this->GetArenaForAllocation());
  }
  _this->_impl_.clusterid_ = from._impl_.clusterid_;
  // @@protoc_insertion_point(copy_constructor:csce438.SyncRequest)
}

inline void SyncRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.users_){arena}
    , decltype(_impl_.message_) {}

    , decltype(_impl_.type_) {}

    , decltype(_impl_.clusterid_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncRequest::~SyncRequest() {
  // @@protoc_insertion_point(destructor:csce438.SyncRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_users()->~RepeatedPtrField();
  _impl_.message_.Destroy();
  _impl_.type_.Destroy();
}

void SyncRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.SyncRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_users()->Clear();
  _impl_.message_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.clusterid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "csce438.SyncRequest.message"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string users = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_users();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "csce438.SyncRequest.users"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // string type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "csce438.SyncRequest.type"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 ClusterID = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.clusterid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* SyncRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.SyncRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "csce438.SyncRequest.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string users = 2;
  for (int i = 0, n = this->_internal_users_size(); i < n; ++i) {
    const auto& s = this->_internal_users(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "csce438.SyncRequest.users");
    target = stream->WriteString(2, s, target);
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "csce438.SyncRequest.type");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 ClusterID = 4;
  if (this->_internal_clusterid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        4, this->_internal_clusterid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.SyncRequest)
  return target;
}

::size_t SyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.SyncRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string users = 2;
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_users().size());
  for (int i = 0, n = _internal_users().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_users().Get(i));
  }

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // int32 ClusterID = 4;
  if (this->_internal_clusterid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_clusterid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncRequest::GetClassData() const { return &_class_data_; }


void SyncRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncRequest*>(&to_msg);
  auto& from = static_cast<const SyncRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csce438.SyncRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_users()->MergeFrom(from._internal_users());
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_clusterid() != 0) {
    _this->_internal_set_clusterid(from._internal_clusterid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncRequest::CopyFrom(const SyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.SyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncRequest::IsInitialized() const {
  return true;
}

void SyncRequest::InternalSwap(SyncRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_users()->InternalSwap(
      other->_internal_mutable_users());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, lhs_arena,
                                       &other->_impl_.message_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, lhs_arena,
                                       &other->_impl_.type_, rhs_arena);

  swap(_impl_.clusterid_, other->_impl_.clusterid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_synchronizer_2eproto_getter, &descriptor_table_synchronizer_2eproto_once,
      file_level_metadata_synchronizer_2eproto[0]);
}
// ===================================================================

class SyncReply::_Internal {
 public:
};

SyncReply::SyncReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csce438.SyncReply)
}
SyncReply::SyncReply(const SyncReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:csce438.SyncReply)
}

inline void SyncReply::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.success_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SyncReply::~SyncReply() {
  // @@protoc_insertion_point(destructor:csce438.SyncReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncReply::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void SyncReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncReply::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.SyncReply)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* SyncReply::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.SyncReply)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.SyncReply)
  return target;
}

::size_t SyncReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.SyncReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncReply::GetClassData() const { return &_class_data_; }


void SyncReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncReply*>(&to_msg);
  auto& from = static_cast<const SyncReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csce438.SyncReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncReply::CopyFrom(const SyncReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.SyncReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncReply::IsInitialized() const {
  return true;
}

void SyncReply::InternalSwap(SyncReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_synchronizer_2eproto_getter, &descriptor_table_synchronizer_2eproto_once,
      file_level_metadata_synchronizer_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace csce438
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::csce438::SyncRequest*
Arena::CreateMaybeMessage< ::csce438::SyncRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::SyncRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::SyncReply*
Arena::CreateMaybeMessage< ::csce438::SyncReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::SyncReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
