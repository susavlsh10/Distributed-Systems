syntax = "proto3";
package csce438;
//import "google/protobuf/timestamp.proto";

// ------------------------------------------------------------
// The coordinator service definition
// These are the different functionalities exposed by service
// ------------------------------------------------------------

//Init and Heartbeat potentially redundant
service CoordService{

  rpc Heartbeat (ServerInfo) returns (Confirmation) {}
  rpc GetServer (ID) returns (ServerInfo) {}

  rpc GetCluster (ID) returns (ServerInfo) {}

  rpc GetSynchronizer (ID) returns (ServerInfo) {}

  rpc RegisterSynchronizer (ServerInfo) returns (ServerInfo) {}

}

//server info message definition
message ServerInfo{
  int32 serverID = 1;
  string hostname = 2;
  string port = 3;
  string type = 4;
  bool master = 5;
  int32 clusterID = 6;
  bool connected = 7;
}

//confirmation message definition
message Confirmation{
  bool status = 1; //1 = master, 0 = worker
}

//id message definition
message ID{
  int32 id = 1;
}

//path message definition
message Path{
  string path = 1;
}

//path and data message definition
message PathAndData{
  string path = 1;
  string data = 2;
}

//status message definition
message Status{
  bool status = 1;
}


// The synchronizer service definition.
service SynchService {
  // update user file
  rpc SyncUsers (SyncRequest) returns (SyncReply) {}

  // update follower file
  rpc SyncFollowers (SyncRequest) returns (SyncReply) {}

  // update timeline
  rpc SyncTimeline (timelineRequest) returns (SyncReply) {}

  rpc UpdateMaster (MasterInfo) returns (SyncReply) {}

}

// The request message containing the user's name.
message SyncRequest {
string message = 1;
repeated string users = 2;
string type = 3; //follow, unfollow
int32 ClusterID = 4;
string username = 5;
string followname = 6;
}

// The response message containing the greetings
message SyncReply {
//string message = 1;
bool success = 1;
}

message timelineRequest {
string username = 1;
repeated string message = 2;
repeated string timestamp = 3;
string follower_name = 4; 
}

message MasterInfo{
int32 serverID = 1;
int32 clusterID = 2;
}

